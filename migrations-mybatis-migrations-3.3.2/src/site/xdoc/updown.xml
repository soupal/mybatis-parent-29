<?xml version="1.0" encoding="UTF-8"?>
<!--

       Copyright 2010-2016 the original author or authors.

       Licensed under the Apache License, Version 2.0 (the "License");
       you may not use this file except in compliance with the License.
       You may obtain a copy of the License at

          http://www.apache.org/licenses/LICENSE-2.0

       Unless required by applicable law or agreed to in writing, software
       distributed under the License is distributed on an "AS IS" BASIS,
       WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
       See the License for the specific language governing permissions and
       limitations under the License.

-->
<document xmlns="http://maven.apache.org/XDOC/2.0"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">

  <properties>
    <title>MyBatis Migrations | Migrate > up,down</title>
    <author email="mybatis-dev@googlegroups.com">The MyBatis Team</author>
  </properties>

  <body>
    <section name="The 'up,down' commands">
      <p>As discussed above, the migration scripts have both a <b>do</b> and an <b>undo</b> section in them.
      It’s therefore possible to evolve and devolve a database to simplify development and concurrent evolution of the
      database across development teams.</p>
      <p>The <b>up</b> command runs the <b>do</b> section of all pending migrations in order, one after the other.</p>
      <p>The <b>down</b> command runs the <b>undo</b> section of the <i>last applied</i> migration only.</p>

     <p>These commands behave this way because you’re most likely to always want the latest revision of the database
     schema, and if you ever need to roll back, you’ll probably only want to do so for the last few versions –
     and do so in a controlled manner.</p>

     <p>Here’s a more visual example of how the up and down commands work.
     We’ll use the status command in between to see the effect:</p>

      <source>/home/cbegin/testdb$ migrate status
ID             Applied At          Description
==================================================================
20090802210445    ...pending...    create changelog
20090804225207    ...pending...    create author table
20090804225328    ...pending...    create blog table
20090804225333    ...pending...    create post table
￼
/home/cbegin/testdb$ migrate up

/home/cbegin/testdb$ migrate status
ID             Applied At          Description
==================================================================
20090802210445 2009-08-04 22:51:17 create changelog
20090804225207 2009-08-04 22:51:17 create author table
20090804225328 2009-08-04 22:51:17 create blog table
20090804225333 2009-08-04 22:51:17 create post table

/home/cbegin/testdb$ migrate down

/home/cbegin/testdb$ migrate status
ID             Applied At          Description
==================================================================
20090802210445 2009-08-04 22:51:17 create changelog
20090804225207 2009-08-04 22:51:17 create author table
20090804225328 2009-08-04 22:51:17 create blog table
20090804225333    ...pending...    create post table</source>

      <p>As mentioned, by default up applies all pending migrations, and down undoes just the most recent one.
      Both up and down commands can take an integer parameter to override these defaults. The integer specifies how many
      steps should be executed. For example:</p>

      <source>/home/cbegin/testdb$ migrate down 2

/home/cbegin/testdb$ migrate status
ID             Applied At          Description
==================================================================
20090802210445 2009-08-04 22:51:17 create changelog
20090804225207    ...pending...    create author table
20090804225328    ...pending...    create blog table
20090804225333    ...pending...    create post table</source>

        <p>There really isn’t much more to the up and down commands than that. They let you navigate the evolution of the database schema forward and backward. As usual, they operate on the
repository in the current working directory, or the one specified in the option <code>--path</code> option.</p>
    </section>
  </body>

</document>
